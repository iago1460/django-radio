# Generated by Django 5.1.3 on 2024-11-30 17:21

import datetime
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CalendarConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slot_duration', models.DurationField(default=datetime.timedelta(seconds=1800), help_text='The frequency for displaying time slots. Format hh:mm:ss', verbose_name='slot duration')),
                ('first_day', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], default=0, help_text='The day that the calendar begins', verbose_name='first day')),
                ('min_time', models.TimeField(default=datetime.time(0, 0), help_text='Determines the starting time that will be displayed, even when the scrollbars have been scrolled all the way up.', verbose_name='min time')),
                ('max_time', models.TimeField(default=datetime.time(23, 59, 59), help_text='Determines the end time (exclusively) that will be displayed, even when the scrollbars have been scrolled all the way down.', verbose_name='max time')),
            ],
            options={
                'verbose_name': 'Calendar Configuration',
                'verbose_name_plural': 'Calendar Configuration',
                'default_permissions': ('change',),
            },
        ),
        migrations.CreateModel(
            name='PodcastConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_source', models.CharField(blank=True, default='', help_text='The source url where the recordings will be available after the upload. For example: "http://RadioCo.org/recordings/"', max_length=500, verbose_name='URL Source')),
                ('start_delay', models.PositiveIntegerField(default=0, help_text='In seconds. Initial delay of recordings', verbose_name='start delay')),
                ('end_delay', models.PositiveIntegerField(default=0, help_text='In seconds.', verbose_name='end delay')),
                ('next_events', models.PositiveIntegerField(default=32, help_text='In hours. The next events supplied to the recorder program', verbose_name='next events')),
            ],
            options={
                'verbose_name': 'Podcast Configuration',
                'verbose_name_plural': 'Podcast Configuration',
                'default_permissions': ('change',),
            },
        ),
        migrations.CreateModel(
            name='RadiocomConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('station_name', models.CharField(default='RadioCo', help_text='The name of radio station', max_length=255, verbose_name='station name')),
                ('icon_url', models.URLField(blank=True, help_text='The icon url where the store icon is.', max_length=255, verbose_name='big icon url')),
                ('big_icon_url', models.URLField(blank=True, help_text='The icon url where the store icon is.', max_length=255, verbose_name='icon url')),
                ('history', models.TextField(blank=True, default='', help_text='The history of the station', verbose_name='history')),
                ('latitude', models.FloatField(blank=True, default=0, verbose_name='latitude')),
                ('longitude', models.FloatField(blank=True, default=0, verbose_name='longitude')),
                ('news_rss', models.URLField(blank=True, help_text='The news rss url where the recordings news rss', max_length=255, verbose_name='news_rss')),
                ('station_photos', models.TextField(blank=True, default='', help_text='A list of urls to the station photos', verbose_name='station photos')),
                ('stream_url', models.URLField(blank=True, help_text='The stream url where its hear actual program', max_length=255, verbose_name='stream url')),
            ],
            options={
                'verbose_name': 'Radiocom Configuration',
                'verbose_name_plural': 'Radiocom Configuration',
                'default_permissions': ('change',),
            },
        ),
        migrations.CreateModel(
            name='SiteConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_name', models.CharField(default='RadioCo', max_length=255, verbose_name='Site Name')),
                ('about_footer', models.TextField(blank=True, default='', verbose_name='Footer')),
                ('more_about_us', models.TextField(blank=True, default='', verbose_name='More info')),
                ('google_analytics_id', models.CharField(blank=True, default='', help_text='Example "UA-00000-0"', max_length=255, verbose_name='Google Analytics ID')),
                ('address', models.TextField(blank=True, default='', help_text='Can contain raw HTML.', verbose_name='Address')),
                ('twitter_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Twitter address')),
                ('facebook_address', models.CharField(blank=True, max_length=255, null=True, verbose_name='facebook address')),
            ],
            options={
                'verbose_name': 'Global Configuration',
                'verbose_name_plural': 'Global Configuration',
                'default_permissions': ('change',),
            },
        ),
    ]
